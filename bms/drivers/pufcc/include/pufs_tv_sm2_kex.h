/**
 * @file      pufs_tv_sm2_kex.h
 * @brief     PUFsecurity test vectors for SM2 key exchange protocol
 * @copyright 2020 PUFsecurity
 */
/* THIS SOFTWARE IS SUPPLIED BY PUFSECURITY ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. TO THE FULLEST
 * EXTENT ALLOWED BY LAW, PUFSECURITY'S TOTAL LIABILITY ON ALL CLAIMS IN
 * ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES,
 * IF ANY, THAT YOU HAVE PAID DIRECTLY TO PUFSECURITY FOR THIS SOFTWARE.
 */

#ifndef __PUFS_TV_SM2_KEX_H__
#define __PUFS_TV_SM2_KEX_H__

static const struct sm2_kex_test_pattern
{
    pufs_ec_name_t name;
    bool init;
    uint32_t idllen;
    const void* idl;
    uint32_t idrlen;
    const void* idr;
    const void* prkl;
    const void* tprkl;
    const void* pukrx;
    const void* pukry;
    const void* tpukrx;
    const void* tpukry;
    uint32_t keylen;
    const void* key;
    const void* check2;
    const void* check3;
} sm2_kex_tp[] =
{
#ifdef PUFS_TV_FULL
    { SM2, true,
        16, "1234567812345678",
        16, "1234567812345678",
        "\x81\xeb\x26\xe9\x41\xbb\x5a\xf1\x6d\xf1\x16\x49\x5f\x90\x69\x52\x72\xae\x2c\xd6\x3d\x6c\x4a\xe1\x67\x84\x18\xbe\x48\x23\x00\x29",
        "\xd4\xde\x15\x47\x4d\xb7\x4d\x06\x49\x1c\x44\x0d\x30\x5e\x01\x24\x00\x99\x0f\x3e\x39\x0c\x7e\x87\x15\x3c\x12\xdb\x2e\xa6\x0b\xb3",
        "\x6a\xe8\x48\xc5\x7c\x53\xc7\xb1\xb5\xfa\x99\xeb\x22\x86\xaf\x07\x8b\xa6\x4c\x64\x59\x1b\x8b\x56\x6f\x73\x57\xd5\x76\xf1\x6d\xfb",
        "\xee\x48\x9d\x77\x16\x21\xa2\x7b\x36\xc5\xc7\x99\x20\x62\xe9\xcd\x09\xa9\x26\x43\x86\xf3\xfb\xea\x54\xdf\xf6\x93\x05\x62\x1c\x4d",
        "\xac\xc2\x76\x88\xa6\xf7\xb7\x06\x09\x8b\xc9\x1f\xf3\xad\x1b\xff\x7d\xc2\x80\x2c\xdb\x14\xcc\xcc\xdb\x0a\x90\x47\x1f\x9b\xd7\x07",
        "\x2f\xed\xac\x04\x94\xb2\xff\xc4\xd6\x85\x38\x76\xc7\x9b\x8f\x30\x1c\x65\x73\xad\x0a\xa5\x0f\x39\xfc\x87\x18\x1e\x1a\x1b\x46\xfe",
        16, "\x6c\x89\x34\x73\x54\xde\x24\x84\xc6\x0b\x4a\xb1\xfd\xe4\xc6\xe5",
        "\xd3\xa0\xfe\x15\xde\xe1\x85\xce\xae\x90\x7a\x6b\x59\x5c\xc3\x2a\x26\x6e\xd7\xb3\x36\x7e\x99\x83\xa8\x96\xdc\x32\xfa\x20\xf8\xeb",
        "\x18\xc7\x89\x4b\x38\x16\xdf\x16\xcf\x07\xb0\x5c\x5e\xc0\xbe\xf5\xd6\x55\xd5\x8f\x77\x9c\xc1\xb4\x00\xa4\xf3\x88\x46\x44\xdb\x88",
    },
#endif
    { SM2, false,
        16, "1234567812345678",
        16, "1234567812345678",
        "\x78\x51\x29\x91\x7d\x45\xa9\xea\x54\x37\xa5\x93\x56\xb8\x23\x38\xea\xad\xda\x6c\xeb\x19\x90\x88\xf1\x4a\xe1\x0d\xef\xa2\x29\xb5",
        "\x7e\x07\x12\x48\x14\xb3\x09\x48\x91\x25\xea\xed\x10\x11\x13\x16\x4e\xbf\x0f\x34\x58\xc5\xbd\x88\x33\x5c\x1f\x9d\x59\x62\x43\xd6",
        "\x16\x0e\x12\x89\x7d\xf4\xed\xb6\x1d\xd8\x12\xfe\xb9\x67\x48\xfb\xd3\xcc\xf4\xff\xe2\x6a\xa6\xf6\xdb\x95\x40\xaf\x49\xc9\x42\x32",
        "\x4a\x7d\xad\x08\xbb\x9a\x45\x95\x31\x69\x4b\xeb\x20\xaa\x48\x9d\x66\x49\x97\x5e\x1b\xfc\xf8\xc4\x74\x1b\x78\xb4\xb2\x23\x00\x7f",
        "\x64\xce\xd1\xbd\xbc\x99\xd5\x90\x04\x9b\x43\x4d\x0f\xd7\x34\x28\xcf\x60\x8a\x5d\xb8\xfe\x5c\xe0\x7f\x15\x02\x69\x40\xba\xe4\x0e",
        "\x37\x66\x29\xc7\xab\x21\xe7\xdb\x26\x09\x22\x49\x9d\xdb\x11\x8f\x07\xce\x8e\xaa\xe3\xe7\x72\x0a\xfe\xf6\xa5\xcc\x06\x20\x70\xc0",
        16, "\x6c\x89\x34\x73\x54\xde\x24\x84\xc6\x0b\x4a\xb1\xfd\xe4\xc6\xe5",
        "\xd3\xa0\xfe\x15\xde\xe1\x85\xce\xae\x90\x7a\x6b\x59\x5c\xc3\x2a\x26\x6e\xd7\xb3\x36\x7e\x99\x83\xa8\x96\xdc\x32\xfa\x20\xf8\xeb",
        "\x18\xc7\x89\x4b\x38\x16\xdf\x16\xcf\x07\xb0\x5c\x5e\xc0\xbe\xf5\xd6\x55\xd5\x8f\x77\x9c\xc1\xb4\x00\xa4\xf3\x88\x46\x44\xdb\x88",
    },
};

#endif /* __PUFS_TV_SM2_KEX_H__ */
