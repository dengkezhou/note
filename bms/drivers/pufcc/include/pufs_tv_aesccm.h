/**
 * @file      pufs_tv_aesccm.h
 * @brief     PUFsecurity test vectors for AES-CCM
 * @copyright 2020 PUFsecurity
 */
/* THIS SOFTWARE IS SUPPLIED BY PUFSECURITY ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. TO THE FULLEST
 * EXTENT ALLOWED BY LAW, PUFSECURITY'S TOTAL LIABILITY ON ALL CLAIMS IN
 * ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES,
 * IF ANY, THAT YOU HAVE PAID DIRECTLY TO PUFSECURITY FOR THIS SOFTWARE.
 */

#ifndef __PUFS_TV_AESCCM_H__
#define __PUFS_TV_AESCCM_H__

static const struct ccm_test_pattern
{
    pufs_cipher_t cipher;
    uint32_t keybits;
    const void* key;
    uint32_t ptlen;
    const void* pt;
    uint32_t noncelen;
    const void* nonce;
    uint32_t aadlen;
    const void* aad;
    uint32_t ctlen;
    const void* ct;
    uint32_t taglen;
    const void* tag;
} aes_ccm_tp[] =
{
#ifdef PUFS_TV_FULL
    { AES,
      128, "\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f",
      4, "\x20\x21\x22\x23",
      7, "\x10\x11\x12\x13\x14\x15\x16",
      8, "\x00\x01\x02\x03\x04\x05\x06\x07",
      4, "\x71\x62\x01\x5b",
      4, "\x4d\xac\x25\x5d",
    },
    { AES,
      128, "\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f",
      16, "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f",
      8, "\x10\x11\x12\x13\x14\x15\x16\x17",
      16, "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f",
      16, "\xd2\xa1\xf0\xe0\x51\xea\x5f\x62\x08\x1a\x77\x92\x07\x3d\x59\x3d",
      6, "\x1f\xc6\x4f\xbf\xac\xcd",
    },
    { AES,
      128, "\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f",
      24, "\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37",
      12, "\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b",
      20, "\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13",
      24, "\xe3\xb2\x01\xa9\xf5\xb7\x1a\x7a\x9b\x1c\xea\xec\xcd\x97\xe7\x0b\x61\x76\xaa\xd9\xa4\x42\x8a\xa5",
      8, "\x48\x43\x92\xfb\xc1\xb0\x99\x51",
    },
    { AES,
      128, "\xd2\x4a\x3d\x3d\xde\x8c\x84\x83\x02\x80\xcb\x87\xab\xad\x0b\xb3",
      24, "\x7c\x86\x13\x5e\xd9\xc2\xa5\x15\xaa\xae\x0e\x9a\x20\x81\x33\x89\x72\x69\x22\x0f\x30\x87\x00\x06",
      13, "\xf1\x10\x00\x35\xbb\x24\xa8\xd2\x60\x04\xe0\xe2\x4b",
      0, NULL,
      24, "\x1f\xae\xb0\xee\x2c\xa2\xcd\x52\xf0\xaa\x39\x66\x57\x83\x44\xf2\x4e\x69\xb7\x42\xc4\xab\x37\xab",
      16, "\x11\x23\x30\x12\x19\xc7\x05\x99\xb7\xc3\x73\xad\x4b\x3a\xd6\x7b",
    },
#endif
    { AES,
      128, "\x2e\xbf\x60\xf0\x96\x90\x13\xa5\x4a\x3d\xed\xb1\x9d\x20\xf6\xc8",
      0, NULL,
      13, "\x1d\xe8\xc5\xe2\x1f\x9d\xb3\x31\x23\xff\x87\x0a\xdd",
      32, "\xe1\xde\x6c\x61\x19\xd7\xdb\x47\x11\x36\x28\x5d\x10\xb4\x7a\x45\x02\x21\xb1\x69\x78\x56\x91\x90\xef\x6a\x22\xb0\x55\x29\x56\x03",
      0, NULL,
      16, "\x0e\xad\x29\xef\x20\x5f\xbb\x86\xd1\x1a\xbe\x5e\xd7\x04\xb8\x80",
    },
};

#endif /* __PUFS_TV_AESCCM_H__ */
