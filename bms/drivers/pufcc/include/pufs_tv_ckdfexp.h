/**
 * @file      pufs_tv_ckdfexp.h
 * @brief     PUFsecurity test vectors for CKDF key expansion
 * @copyright 2020 PUFsecurity
 */
/* THIS SOFTWARE IS SUPPLIED BY PUFSECURITY ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. TO THE FULLEST
 * EXTENT ALLOWED BY LAW, PUFSECURITY'S TOTAL LIABILITY ON ALL CLAIMS IN
 * ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES,
 * IF ANY, THAT YOU HAVE PAID DIRECTLY TO PUFSECURITY FOR THIS SOFTWARE.
 */

#ifndef __PUFS_TV_CKDFEXP_H__
#define __PUFS_TV_CKDFEXP_H__

static const struct kdf2_test_pattern
#ifndef __KDF2_TEST_PATTERN__
#define __KDF2_TEST_PATTERN__
{
    pufs_hash_t hash;
    bool feedback;
    uint32_t ctrpos;
    uint32_t ctrlen;
    uint32_t kilen;
    const void* ki;
    uint32_t infolen;
    const void* info;
    uint32_t ivlen;
    const void* iv;
    uint32_t outlen;
    const void* ko;
}
#endif /* __KDF2_TEST_PATTERN__ */
ckdf2_tp[] =
{
#ifdef PUFS_TV_FULL
    { N_HASH_T, false, 0, 1,
        16, "\xc3\xba\x16\xa8\xec\x86\x4c\x0f\x6f\x27\xce\xa2\x20\xec\xca\xaa",
        60, "\xc2\x0f\xf0\x15\xea\x1e\x1c\x97\xfe\xd4\xe9\x73\xb4\x6a\x9b\x26\x26\xcb\x3a\xc9\xa8\x77\x6c\xb0\x8d\x73\xd4\x53\x4d\x38\x37\xcc\xf8\x8e\x93\xd1\x68\x2c\x6e\x77\x9e\xa9\xf2\xf9\xed\xe4\x7a\x2e\x07\xef\x28\x1d\x88\x67\x72\x2b\x31\x0c\x1c\xae",
        0, NULL,
        40, "\xce\xea\xab\x29\x64\x8c\xff\x00\xb8\x9f\x73\x30\x07\x62\x98\xb1\xe0\x36\xd7\x3e\xd7\xc5\xe6\x1f\x2e\x97\xbd\x5c\xe0\x92\x0f\x0f\x45\x13\x3e\xac\xa3\xd3\x71\x2b",
    },
    { N_HASH_T, false, 60, 3,
        24, "\x7c\x03\x50\x61\x68\x28\x2c\xd8\x8e\x65\x73\xed\xd1\x50\x72\x8d\x0f\x09\xe7\xc9\xcc\x70\x3f\xe8",
        60, "\x61\xd2\xcc\xb9\x95\xb3\xa3\xb1\x1b\x8c\x47\x00\xdc\x25\xe7\x14\xf3\xb6\x9b\xb1\xd2\x95\xf0\x68\xe8\x5d\x0a\x39\xa2\xd3\x9d\xcc\xeb\xf0\x2b\x73\x26\x5d\x19\xce\xa4\xd9\x16\x48\x1d\x59\x84\xb7\x69\xd8\x0d\x69\xe6\x67\x81\x3a\x11\xe6\xbd\xa7",
        0, NULL,
        40, "\x79\x5c\xd4\x6d\xa5\xb7\xf8\x24\xfa\x51\xe4\x98\x3d\xbe\x1b\xfb\x1b\x85\x59\xb3\xde\x4d\x38\x80\xf9\xe2\x4d\xf4\xcb\x53\x32\x0d\xd6\x51\x08\x7f\xf4\x03\x74\x1b",
    },
    { N_HASH_T, false, 50, 4,
        32, "\xc4\xdf\x3e\xe2\x8a\x62\x75\x14\xea\xf8\xdf\x54\x84\x5f\x52\x9b\xf5\xa6\xd1\xf9\xce\x8c\x16\xb8\x1e\x64\x24\x99\x25\x43\x0f\xb5",
        60, "\x87\xdb\x4d\x53\x6a\x16\x1d\x47\xce\x55\x1e\xdc\xfe\xce\x7a\x18\x7e\xb0\x43\x8a\xe5\x50\xa6\x74\x6c\xfc\x38\x95\x70\x7b\x85\xa6\xd8\x7f\x11\xb4\xf8\x71\x12\xf8\x94\x1c\x57\x3c\x1a\x24\xe4\x69\xd6\x63\x07\x4b\xc4\xc2\x76\xec\x7c\x51\x26\xdc",
        0, NULL,
        40, "\x87\x06\x1e\x3b\xef\xb1\xab\x0c\xa5\x61\xde\xd8\x66\xce\xff\xee\xe6\xd8\x72\xc7\xf2\x73\x8a\x59\xf4\x54\x51\x89\xfe\x43\x73\x22\x82\x7e\xec\x9c\xfd\xc8\x35\xcf",
    },
    { N_HASH_T, true, 0, 4,
        16, "\x00\x9f\xe8\x4e\xd3\x0e\x0e\x83\x11\xaa\x0e\xbb\xdd\xb4\x8c\x20",
        51, "\x66\xf9\xfa\x37\x76\x8c\xa8\xf5\x7f\x66\xef\xe3\x0c\xa6\x90\x6f\xd2\x3d\x84\x74\xfb\x56\x08\x5d\x59\x6f\xf4\x72\x82\xdd\x5d\x30\xfb\x35\xfc\x90\x51\xf4\x52\x44\x75\xca\x26\x51\x8f\xe8\x3d\x4d\xfc\x44\xd1",
        0, NULL,
        64, "\xc6\x3e\x1a\x7a\x6f\x6a\x7a\xd8\x16\x20\x25\xec\x70\x74\xac\xa1\x46\x69\xfb\x3a\x90\x61\xab\x9e\x80\x73\xf9\xeb\xb4\xa8\x1d\xef\xe9\x2f\x52\x08\x38\xfd\x7c\x60\xf8\xba\x0d\xd5\x79\x07\x09\xce\xee\x84\x6e\x66\x3a\x97\x9f\x43\x36\xe0\x2f\x44\xa5\x85\x3a\xcb",
    },
    { N_HASH_T, true, 1, 2,
        24, "\x00\x15\x8a\xfa\x81\x05\x7f\x89\x8d\x1a\xf1\xec\xda\xff\x49\x20\xe8\xa8\x40\x5d\x24\x42\x2a\xeb",
        51, "\xbe\x19\x55\x69\xdb\x01\x87\xf0\x5d\xe8\x81\xf8\x29\x90\x94\x65\x02\x19\x1e\xbf\x51\x10\x86\x3c\x4c\xd4\x83\xc4\x7b\x6a\x94\x13\x61\x1c\x71\xc4\x72\x98\x7c\x83\xd9\x8b\x11\xcc\x26\x34\x71\x40\xba\x1b\xac",
        16, "\xf3\x0f\xaa\x26\xa8\x66\x47\xea\x83\x08\xcd\xf4\xdb\x97\x5f\xfb",
        64, "\x4d\xd2\x4d\x91\x00\x0f\xcf\xed\x2f\xa1\xb8\xc8\x12\x29\x96\xbb\x52\xab\xd7\x80\x7a\xbc\x82\x18\xa5\xa6\x9c\xb1\xc5\x96\x44\x66\x83\x46\x03\xfe\x60\xbf\x14\xfa\xd0\x96\xd9\x56\x0f\x58\x84\x65\x50\x99\xc2\xa0\xc3\xfc\x31\xab\x93\x98\x25\x53\x0b\x97\x5a\x89",
    },
    { N_HASH_T, true, 2, 3,
        32, "\xb8\x18\x90\x12\x71\xa7\xf9\xe3\xfb\xa8\xa1\x65\xf1\xd5\x83\x21\x2d\x96\x0f\x50\x3c\x14\x49\x74\x29\x36\x6d\xce\x59\xfa\x9d\xde",
        51, "\x5f\xc3\xfb\x29\xd9\x5e\x2b\xe8\x49\x89\xa8\x72\x45\x5c\x9e\x12\xfb\xc7\xa8\x95\x25\x0e\x66\x12\x28\xce\x75\x2f\xc2\x1b\x05\x41\x62\x42\xbf\x0f\x7e\xc8\xf3\x99\x77\xd3\xad\x9c\xa1\x30\xb6\x3a\xa7\x2c\x64",
        16, "\x69\xa0\x9a\xb9\x36\xef\x31\xf8\x70\xd7\x0b\x61\x22\x5b\x8b\x84",
        64, "\x45\x5f\x0c\x5b\xff\x77\x6f\x56\xc8\xd6\x2f\x95\xe6\x31\x16\x19\x05\xb3\xd0\x99\x69\x5f\xed\x22\x78\xbc\x80\x86\x3d\x62\xa6\xf3\x2e\x16\x79\x2d\x90\x20\x41\xcc\x81\x09\x37\xae\x48\xa9\x84\xee\x99\xbe\x1e\x0c\x05\x41\xab\x07\xf6\xc9\x4e\xf4\x21\x01\x16\x24",
    },
#endif
    { N_HASH_T, true, 0, 0,
        32, "\x3d\x3a\x3e\x5d\x17\x42\xe0\xa6\x07\x76\x45\xf2\x76\x71\xab\x6e\xaf\x6e\xaf\x23\x8f\x7f\xa6\x85\x3a\xd4\xde\xea\x28\xcc\x6a\x33",
        51, "\xc9\x4b\xc1\xdf\xdf\x89\xa6\x53\x4d\x05\x6e\x42\x05\x09\xaa\x6d\x34\xa5\xa7\xb3\x52\xa9\x9e\xb3\x88\x95\x36\x6d\xc1\xcb\x9b\xc8\x71\xc9\x75\x8c\x92\x26\xce\x80\x1f\x8f\xbb\x36\x1a\xb0\x7f\x00\xef\x21\x6a",
        16, "\xf4\x49\x5b\x56\x7f\x3c\x88\x0c\x7a\xb4\x4d\x16\xc4\xca\x88\x80",
        64, "\x58\x6d\xe3\xdd\xaa\x86\xca\xe9\xee\xbd\x91\x78\x3d\x75\xf9\x72\xa9\x9e\xc6\xb8\xef\xfe\x27\xd7\xbe\x20\x81\xcc\x44\xb0\x51\x64\x4c\xa0\x67\xd5\x62\x2e\xe3\xdc\x02\x27\x73\x27\xbd\x64\x8e\x65\x52\xe0\xd2\x99\x33\x69\x8a\x22\x10\x47\x36\x28\xd2\xb9\x6a\xcd",
    },
};

#endif /* __PUFS_TV_CKDFEXP_H__ */
