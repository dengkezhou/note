/**
 * @file      pufs_tv_drbgctr.h
 * @brief     PUFsecurity test vectors for SP800-90A CTR_DRBG
 * @copyright 2020 PUFsecurity
 */
/* THIS SOFTWARE IS SUPPLIED BY PUFSECURITY ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. TO THE FULLEST
 * EXTENT ALLOWED BY LAW, PUFSECURITY'S TOTAL LIABILITY ON ALL CLAIMS IN
 * ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES,
 * IF ANY, THAT YOU HAVE PAID DIRECTLY TO PUFSECURITY FOR THIS SOFTWARE.
 */

#ifndef __PUFS_TV_DRBGCTR_H__
#define __PUFS_TV_DRBGCTR_H__

static const struct drbg_test_pattern
{
    pufs_cipher_t cipher;
    uint32_t security;
    uint32_t e_instlen;
    const void* e_inst;
    uint32_t noncelen;
    const void* nonce;
    uint32_t pstrlen;
    const void* pstr;
    uint32_t e_reseedlen;
    const void* e_reseed;
    uint32_t adin_reseedlen;
    const void* adin_reseed;
    uint32_t e_gen1len;
    const void* e_gen1;
    uint32_t adin_gen1len;
    const void* adin_gen1;
    uint32_t e_gen2len;
    const void* e_gen2;
    uint32_t adin_gen2len;
    const void* adin_gen2;
    uint32_t outlen;
    const void* out;
} drbg_tp[] =
{
#ifdef PUFS_TV_FULL
    { AES, 128,
        32, "\xce\x50\xf3\x3d\xa5\xd4\xc1\xd3\xd4\x00\x4e\xb3\x52\x44\xb7\xf2\xcd\x7f\x2e\x50\x76\xfb\xf6\x78\x0a\x7f\xf6\x34\xb2\x49\xa5\xfc",
        0, NULL,
        0, NULL,
        0, NULL,
        0, NULL,
        0, NULL,
        0, NULL,
        0, NULL,
        0, NULL,
        64, "\x65\x45\xc0\x52\x9d\x37\x24\x43\xb3\x92\xce\xb3\xae\x3a\x99\xa3\x0f\x96\x3e\xaf\x31\x32\x80\xf1\xd1\xa1\xe8\x7f\x9d\xb3\x73\xd3\x61\xe7\x5d\x18\x01\x82\x66\x49\x9c\xcc\xd6\x4d\x9b\xbb\x8d\xe0\x18\x5f\x21\x33\x83\x08\x0f\xad\xde\xc4\x6b\xae\x1f\x78\x4e\x5a",
    },
    { AES, 192,
        40, "\xfd\x0b\xe4\xd7\xb3\xa7\x53\x1d\x01\xb7\x86\xf3\x49\xef\x93\x87\xb9\x84\xf3\x8e\xb5\x32\x6a\x1e\x09\xc3\x7e\x95\x5a\x3b\x88\x0f\xff\x1d\xe8\xc3\xd1\x13\xb8\xc2",
        0, NULL,
        40, "\x1d\xde\xad\x5b\x3a\x39\xdf\x02\xc6\x0d\x1e\x9f\x93\xa7\xe2\x4b\x75\x13\xec\x4e\x47\x0d\xe5\x68\x80\xf6\xf7\xab\xbc\x96\xea\x7e\x99\x67\x96\x01\x76\x23\x42\x37",
        40, "\xac\x53\xb1\x9d\xff\xbf\xd0\xef\x02\x45\x5c\xd9\xbb\x19\x8e\xad\x37\x8c\x02\x56\xe7\xcb\xe4\x07\x82\xe0\x1a\xff\x52\x90\xf5\xd0\x40\xfe\xa2\x36\x7c\x58\xfb\x34",
        40, "\x89\x9f\xfc\x01\x0b\xbd\x6c\x1e\x0e\x07\x0b\x81\xc9\xe9\x62\x60\x28\x20\x2a\xb2\xb9\x83\x67\x0f\x31\xff\x0f\x79\x75\xc6\x3d\x11\x34\xf6\x9a\x49\x86\xea\xbc\x99",
        0, NULL,
        40, "\x1a\x92\x00\x3e\x60\xf5\xd5\xf7\x22\x79\xf0\x23\xe7\x2e\x5d\xc5\xf9\x5b\x2b\xc7\x54\xbf\x88\x4a\xf8\xd0\x82\xd0\x1d\xc3\x97\xc4\xc5\xcd\x96\x4b\x31\x76\xc5\x1a",
        0, NULL,
        40, "\x9f\xf2\x67\xa1\xc9\x6c\xe4\x3a\x7c\x8a\xf9\xe9\xdb\xd3\xb8\x76\x64\xbb\x57\xd2\x4e\x4d\x71\xff\x4b\x43\x61\xda\x9c\x80\x84\x85\xe1\x78\x0f\xb2\x1b\x42\x52\x04",
        64, "\x50\x3e\x4d\x5e\xbf\xa7\x67\x1c\x3f\xf3\x70\x97\x58\x88\xab\x38\xcb\xb5\x8a\xb2\xb7\x1f\x20\xb3\xa6\xf2\x84\x83\x1a\x84\xe0\xe8\xdf\xc3\x9f\x8f\xeb\x11\x4b\xfc\x83\xa5\xf0\x65\xc4\xbb\xe5\xaf\x8b\x4a\x7c\x5b\x4c\x13\x50\xbe\x9c\x3c\xc9\xb3\x4e\xca\x4a\x7e",
    },
    { AES, 256,
        48, "\xd1\x02\x23\x69\x87\xb3\x56\x2b\x63\x1c\x79\x15\xb1\x92\x58\xc0\x19\xcd\x16\x52\x17\xb3\xf6\xda\x30\xf7\x1e\x40\x9c\xe2\xad\x2f\x7a\xc8\xb6\xde\x86\x69\x6e\xd2\x7b\xc0\x25\x17\x01\xa4\xe2\x20",
        0, NULL,
        48, "\x0d\x76\xf1\x0e\x4b\x15\x26\x3d\xee\x96\xa2\x88\x4f\x3e\xb3\x8b\x6a\x9c\xba\x0c\x37\x2d\x75\x4a\xdf\xf9\x2c\xbc\xd5\xf9\x78\x4c\xbe\x37\x1d\xce\xd8\x33\xfd\x76\xe4\x33\xc8\xe6\x1f\xe5\x46\x79",
        0, NULL,
        0, NULL,
        48, "\xce\x72\x8d\x3f\xdf\x9c\xa9\x16\x9b\xb0\x9d\x07\x70\x75\x37\x04\x83\x0b\x7a\x74\x22\x5a\xd6\xb0\x91\x74\xbb\xfd\x0c\xec\xfc\x69\x38\xd0\x86\x7e\xf6\x29\x0c\x59\x49\xe9\xf6\x7f\x96\x72\x7d\x66",
        48, "\xd3\xe5\xec\x40\x2d\xbd\x70\xd5\x3b\x87\x52\xeb\xb6\x93\xee\xe7\xf9\xbd\x91\xb8\x4c\x21\xcb\x48\x68\x12\x52\x4d\x5d\xec\x45\xd6\xd9\xd6\xa3\x69\x55\x84\x0b\xa7\xb9\x75\x4c\xaf\x83\x4a\x9a\xd4",
        48, "\x6e\x86\x43\x5f\xc3\x9e\x96\xee\x9d\xaf\xef\x7a\x45\xa7\x3e\x28\xf5\x59\x4a\xbc\x87\xe8\x8a\x44\xc0\x34\x86\x29\xa6\x79\x97\x2f\x32\x21\x64\xce\x2b\x19\x1b\x29\xa9\xd2\x14\x55\xd7\x31\x0c\x4d",
        48, "\x1a\x9f\xe5\x52\xc1\xa2\x99\xf1\x4d\xac\x88\x9a\xcd\x3f\x6d\x02\xc6\xb5\x81\xcc\x58\x02\x4f\x07\xc4\x9d\x6e\x67\xcc\xb7\x47\x20\x44\xae\x5e\x30\x4c\xdc\xf6\x23\xe4\x67\x7d\x13\xec\xda\x89\x2a",
        64, "\xe2\x0b\x30\xf4\x96\xae\x9d\xef\x70\x20\x74\x7e\xe5\x34\x8b\x4a\x53\x1a\x6b\xa1\xb6\x2e\x74\x3f\x31\xa7\xd3\xd3\xca\x81\x60\x81\x9f\x57\xd6\xe1\x4f\x52\xfe\xde\x07\x14\xa9\xe3\xbb\x71\x88\x7c\x3b\x50\xaa\xcd\xf5\x30\x60\xb3\x00\x03\x09\x2e\x97\x76\x87\x01",
    },
    { AES, 128,
        16, "\xe7\x96\xb7\x28\xec\x69\xcf\x79\xf9\x7e\xaa\x2c\x06\xe7\x18\x7f",
        8, "\x35\x68\xf0\x11\xc2\x82\xc0\x1d",
        16, "\xb5\xae\x69\x31\x92\xff\x05\x7e\x68\x2a\x62\x9b\x84\xb8\xfe\xec",
        16, "\x31\xc4\xdb\x57\x13\xe0\x8e\x4e\x8c\xfb\xf7\x77\xb9\x62\x1a\x04",
        16, "\xb6\x99\x76\x17\xe4\xe2\xc9\x4d\x8a\x3b\xf3\xc6\x14\x39\xa5\x5e",
        0, NULL,
        16, "\xc3\x99\x8f\x9e\xdd\x93\x82\x86\xd7\xfa\xd2\xcc\x75\x96\x3f\xdd",
        0, NULL,
        16, "\x64\x8f\xc7\x36\x0a\xe2\x70\x02\xe1\xaa\x77\xd8\x58\x95\xb8\x9e",
        64, "\x6c\xe1\xeb\x64\xfd\xca\x9f\xd3\xb3\xef\x61\x91\x3c\xc1\xc2\x14\xf9\x3b\xca\x0e\x51\x5d\x05\x14\xfa\x48\x8d\x8a\xf5\x29\xf4\x98\x92\xbb\x7c\xd7\xfb\xf5\x84\xeb\x02\x0f\xd8\xcb\x2a\xf9\xe6\xdb\xfc\xe8\xa8\xa3\x43\x9b\xe8\x5d\x5c\xc4\xde\x76\x40\xb4\xef\x7d",
    },
    { AES, 192,
        24, "\x5c\xf3\x47\x2c\x83\xb4\xa9\x0c\x6b\x5f\x34\x9c\xa2\xf9\xbd\xe4\xf7\xff\x42\xf3\x04\x67\x57\x13",
        16, "\x6d\x2f\xc8\xc1\xe3\xae\x56\x7f\xb9\xd2\x23\x84\x70\xa9\x82\x49",
        32, "\xc9\xc7\xab\x32\xc6\x18\xa2\x66\x06\x25\xc8\x15\x25\x0f\x46\xe8\x09\x7d\xdc\xa0\x38\x18\x81\x75\x97\x04\xf9\x33\x38\x3e\x8d\xa7",
        0, NULL,
        0, NULL,
        24, "\x99\xbd\x71\xbc\xd4\x82\xcf\x4c\xcc\x84\x9b\x9d\x3c\xbc\xc0\x52\x9b\xf1\x61\xd5\x05\x6d\x11\xf8",
        32, "\x1c\x34\xe8\x15\xf3\xa3\xbc\xd7\x1f\xe0\x8b\xd7\x63\x3e\xb7\x08\xaf\x86\x10\x4d\x0e\x49\x9a\x4b\xa1\x28\x88\xd6\xd1\xee\x57\x0f",
        24, "\xe4\x60\xda\xfd\x8b\x32\xa9\x6e\xc5\x02\x16\xb0\xfa\x91\x41\x9e\x77\x17\xf5\x0d\xf6\x6a\xc7\xe0",
        32, "\x22\x1a\x56\x80\xb2\x50\x18\xb2\xa5\x3f\x5e\x1d\x0a\x7b\x19\xb0\x4c\xaf\x7b\x25\x58\x79\x3d\xbe\x36\xbb\xab\xca\xea\xb8\xbc\x8e",
        64, "\x29\x43\x3a\xe6\xda\x5e\xff\x61\x61\x44\x9a\x2f\xaf\x74\x91\xa4\x72\x54\x3a\x38\x29\x39\x5c\x19\x5b\x93\x28\x6a\x25\x57\x00\x3c\x07\x0e\x60\xbc\x37\x7a\x5e\x6e\x89\x1a\x9e\x46\xb7\xc5\x34\x02\x68\xaf\xf9\x89\xf8\x6f\x5a\x6a\x32\x24\x02\x1c\x37\x1e\x8d\x11",
    },
#endif
    { AES, 256,
        32, "\x36\x40\x19\x40\xfa\x8b\x1f\xba\x91\xa1\x66\x1f\x21\x1d\x78\xa0\xb9\x38\x9a\x74\xe5\xbc\xcf\xec\xe8\xd7\x66\xaf\x1a\x6d\x3b\x14",
        16, "\x49\x6f\x25\xb0\xf1\x30\x1b\x4f\x50\x1b\xe3\x03\x80\xa1\x37\xeb",
        0, NULL,
        0, NULL,
        0, NULL,
        0, NULL,
        0, NULL,
        0, NULL,
        0, NULL,
        64, "\x58\x62\xeb\x38\xbd\x55\x8d\xd9\x78\xa6\x96\xe6\xdf\x16\x47\x82\xdd\xd8\x87\xe7\xe9\xa6\xc9\xf3\xf1\xfb\xaf\xb7\x89\x41\xb5\x35\xa6\x49\x12\xdf\xd2\x24\xc6\xdc\x74\x54\xe5\x25\x0b\x3d\x97\x16\x5e\x16\x26\x0c\x2f\xaf\x1c\xc7\x73\x5c\xb7\x5f\xb4\xf0\x7e\x1d",
    },
};

#endif /* __PUFS_TV_DRBGCTR_H__ */
