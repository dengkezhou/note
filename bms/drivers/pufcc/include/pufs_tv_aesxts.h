/**
 * @file      pufs_tv_aesxts.h
 * @brief     PUFsecurity test vectors for AES-XTS
 * @copyright 2020 PUFsecurity
 */
/* THIS SOFTWARE IS SUPPLIED BY PUFSECURITY ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. TO THE FULLEST
 * EXTENT ALLOWED BY LAW, PUFSECURITY'S TOTAL LIABILITY ON ALL CLAIMS IN
 * ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES,
 * IF ANY, THAT YOU HAVE PAID DIRECTLY TO PUFSECURITY FOR THIS SOFTWARE.
 */

#ifndef __PUFS_TV_AESXTS_H__
#define __PUFS_TV_AESXTS_H__

static const struct bc_test_pattern
#ifndef __BC_TEST_PATTERN__
#define __BC_TEST_PATTERN__
{
    pufs_cipher_t cipher;
    uint32_t keybits;
    const void* key;
    uint32_t ptlen;
    const void* pt;
    uint32_t ivlen;
    const void* iv;
    uint32_t ctlen;
    const void* ct;
}
#endif /* __BC_TEST_PATTERN__ */
aes_xts_tp[] =
{
#ifdef PUFS_TV_FULL
    { AES,
        128, "\xa1\xb9\x0c\xba\x3f\x06\xac\x35\x3b\x2c\x34\x38\x76\x08\x17\x62\x09\x09\x23\x02\x6e\x91\x77\x18\x15\xf2\x9d\xab\x01\x93\x2f\x2f",
        16, "\xeb\xab\xce\x95\xb1\x4d\x3c\x8d\x6f\xb3\x50\x39\x07\x90\x31\x1c",
        16, "\x4f\xae\xf7\x11\x7c\xda\x59\xc6\x6e\x4b\x92\x01\x3e\x76\x8a\xd5",
        16, "\x77\x8a\xe8\xb4\x3c\xb9\x8d\x5a\x82\x50\x81\xd5\xbe\x47\x1c\x63",
    },
    { AES,
        128, "\x39\x4c\x97\x88\x1a\xbd\x98\x9d\x29\xc7\x03\xe4\x8a\x72\xb3\x97\xa7\xac\xf5\x1b\x59\x64\x9e\xee\xa9\xb3\x32\x74\xd8\x54\x1d\xf4",
        25, "\x2f\x3b\x9d\xcf\xba\xe7\x29\x58\x3b\x1d\x1f\xfd\xd1\x6b\xb6\xfe\x27\x57\x32\x94\x35\x66\x2a\x78\xf0",
        16, "\x4b\x15\xc6\x84\xa1\x52\xd4\x85\xfe\x99\x37\xd3\x9b\x16\x8c\x29",
        25, "\xf3\x47\x38\x02\xe3\x8a\x3f\xfe\xf4\xd4\xfb\x8e\x6a\xa2\x66\xeb\xde\x55\x3a\x64\x52\x8a\x06\x46\x3e",
    },
    { AES,
        128, "\x66\xc2\x1c\x85\x9d\x40\xbc\x38\x47\x25\x62\x6c\x79\x3f\xe8\x82\xb0\xf1\x1a\x39\x7c\x63\xaa\xc2\x02\x6c\xc8\xda\x89\x16\xfb\xad",
        32, "\xa8\xac\x2b\xba\x1d\x5d\xe9\x39\x67\x9f\xbe\x3b\x97\x59\x09\x49\x01\x72\xfe\x86\x0e\x6c\x24\xc7\x07\x63\x74\xdc\x0c\xaf\x55\x35",
        16, "\x68\x86\xce\x72\x37\x03\x1d\x39\x63\xaf\x24\xef\x3d\x20\xf7\xed",
        32, "\x3c\x21\x49\x04\x07\x2f\xc4\xac\x45\xa2\x24\x53\x41\xf7\x8b\x78\x73\xf0\x5d\x32\x55\xd3\x40\x11\x5a\x92\x0d\x0b\xf2\xab\xf6\x71",
    },
    { AES,
        256, "\x1e\xa6\x61\xc5\x8d\x94\x3a\x0e\x48\x01\xe4\x2f\x4b\x09\x47\x14\x9e\x7f\x9f\x8e\x3e\x68\xd0\xc7\x50\x52\x10\xbd\x31\x1a\x0e\x7c\xd6\xe1\x3f\xfd\xf2\x41\x8d\x8d\x19\x11\xc0\x04\xcd\xa5\x8d\xa3\xd6\x19\xb7\xe2\xb9\x14\x1e\x58\x31\x8e\xea\x39\x2c\xf4\x1b\x08",
        32, "\x2e\xed\xea\x52\xcd\x82\x15\xe1\xac\xc6\x47\xe8\x10\xbb\xc3\x64\x2e\x87\x28\x7f\x8d\x2e\x57\xe3\x6c\x0a\x24\xfb\xc1\x2a\x20\x2e",
        16, "\xad\xf8\xd9\x26\x27\x46\x4a\xd2\xf0\x42\x8e\x84\xa9\xf8\x75\x64",
        32, "\xcb\xaa\xd0\xe2\xf6\xce\xa3\xf5\x0b\x37\xf9\x34\xd4\x6a\x9b\x13\x0b\x9d\x54\xf0\x7e\x34\xf3\x6a\xf7\x93\xe8\x6f\x73\xc6\xd7\xdb",
    },
#endif
    { AES,
        256, "\x88\xdf\xd7\xc8\x3c\xb1\x21\x96\x8f\xeb\x41\x75\x20\x55\x5b\x36\xc0\xf6\x3b\x66\x25\x70\xea\xc1\x2e\xa9\x6c\xbe\x18\x8a\xd5\xb1\xa4\x4d\xb2\x3a\xc6\x47\x03\x16\xcb\xa0\x04\x1c\xad\xf2\x48\xf6\xd9\xa7\x71\x3f\x45\x4e\x66\x3f\x3e\x39\x87\x58\x5c\xeb\xbf\x96",
        48, "\xec\x36\x55\x1c\x70\xef\xcd\xf8\x5d\xe7\xa3\x99\x88\x97\x82\x63\xad\x26\x1e\x83\x99\x6d\xad\x21\x9a\x00\x58\xe0\x21\x87\x38\x4f\x2d\x07\x54\xff\x9c\xfa\x00\x0b\xec\x44\x8f\xaf\xd2\xcf\xa7\x38",
        16, "\x0e\xe8\x46\x32\xb8\x38\xdd\x52\x8f\x1d\x96\xc7\x64\x39\x80\x5c",
        48, "\xa5\x5d\x53\x3c\x9c\x58\x85\x56\x2b\x92\xd4\x58\x2e\xa6\x9d\xb8\xe2\xba\x9c\x0b\x96\x7a\x9f\x01\x67\x70\x0b\x04\x35\x25\xa4\x7b\xaf\xe7\xd6\x30\x77\x4e\xaf\x4a\x1d\xc9\xfb\xcf\x94\xa1\xfd\xa4",
    },
};

#endif /* __PUFS_TV_AESXTS_H__ */
